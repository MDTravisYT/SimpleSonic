		include	"Debugger.asm"
		
		INCLUDE		"SRC/SYSTEM/RAM.I"
		INCLUDE		"SRC/SYSTEM/MACRO.I"
		INCLUDE		"SRC/SYSTEM/HEADER.ASM"

INT:
ERROR:
		move.l	#CRAMWRITE,	(VDPCTRL)		;	Set VDP control mode to manually write a palette to CRAM
		move.w	#$000E,		VDPDATA			;	Palleting...
		BRA.S		INT
		
		INCLUDE		"SRC/SYSTEM/SECURITY.ASM"
START:
		LEA		$FF0000,	A6
		MOVEQ	#0,	D7
		MOVE.W	#($FE00/4)-1,	D6
		
	@CLEARRAM:
		MOVE.L	D7,	(A6)+
		DBF		D6,	@CLEARRAM
		BSR.W	INITVDP
		BSR.W	INITJOYPADS
		MOVE.B	#0*4,	(GAMEMODE).W
		
MAINLOOP:
		MOVE.B	(GAMEMODE).W,	D0
		ANDI.W	#%00011100,	D0
		JSR		@INDEX(PC,D0.W)
		BRA.S	MAINLOOP
		
	@INDEX:
		BRA.W	LOGO
		BRA.W	TITLE
		BRA.W	LEVEL
		RTS
		
		INCLUDE		"SRC/SYSTEM/HBLANK.ASM"
		INCLUDE		"SRC/SYSTEM/VBLANK.ASM"
		INCLUDE		"SRC/SYSTEM/INITVDP.ASM"
		INCLUDE		"SRC/SYSTEM/INITJOYPADS.ASM"
		
		INCLUDE		"SRC/SUB/READJOYPADS.ASM"
		INCLUDE		"SRC/SUB/DRAWTILEMAP.ASM"
		INCLUDE		"SRC/SUB/VSYNC.ASM"
		INCLUDE		"SRC/SUB/RUNOBJECTS.ASM"
		INCLUDE		"SRC/SUB/PROCESSSPRITES.ASM"
		
		INCLUDE		"SRC/OBJ/PLAY01.ASM"
		INCLUDE		"SRC/OBJ/PLAY02.ASM"
			
		INCLUDE		"SRC/GAMEMODE/LOGO.ASM"
		INCLUDE		"SRC/GAMEMODE/TITLE.ASM"
		INCLUDE		"SRC/GAMEMODE/LEVEL.ASM"
		
	ALIGN	$18000
MAP_PLAYER:	INCLUDE		"MAP/PLAYER.ASM"
DMAP_PLAYER:INCLUDE		"MAP/PLAYERD.ASM"
ANIM_PLAYER:INCLUDE		"MAP/PLAYER.ANM"
ART_PLAYER:	INCBIN		"ART/PLAYER.UNC"
ROCKMAP:	INCBIN		"MAP/ROCK.ASM"

	ALIGN	$80000
		include	"ErrorHandler.asm"